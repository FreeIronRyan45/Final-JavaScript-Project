{
  "name": "babel-project",
  "version": "1.0.0",
  "description": "Transpile code in a Babel project",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "build": "babel src -d lib "
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-preset-env": "^1.7.0"
  }
}

Transpilation with Babel
1.
Use npm to create a package.json file in the root directory.

The resulting file should have the following name and description values:

name — babel-project
description — Transpile code in a Babel project.
Press enter to skip all of the remaining prompts.

2.
Install the Babel command line and Babel preset environment npm packages.

Also, add these packages to the devDependencies property in package.json.

3.
Add a .babelrc file to the project folder.

4.
In .babelrc, preset your local project’s config to "env".

5.
In package.json, add a script called "build".

When run, the "build" script should use Babel to transpile JavaScript code inside of the src folder and write it to a folder called lib.

Don’t forget to add a comma after the “test” script.

6.
Transpile, then save your code. Look at the browser to see the changes in the website.

Notice the difference between the percentage of browsers that support ES6 syntax and the transpiled ES5 equivalent.

